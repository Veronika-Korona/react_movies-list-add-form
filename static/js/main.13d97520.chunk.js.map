{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","handleChange","event","target","name","value","setState","clearForm","handleSubmit","preventDefault","props","onAdd","this","onSubmit","htmlFor","required","type","id","placeholder","onChange","rows","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13d97520.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { Component } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (newMovie: Movie) => void;\n};\n\nexport class NewMovie extends Component<Props, Movie> {\n  state: Movie = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  handleChange = (\n    event: React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement>,\n  ) => {\n    const { name, value } = event.target;\n\n    this.setState(state => ({\n      ...state,\n      [name]: value,\n    }));\n  };\n\n  clearForm = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    this.props.onAdd(this.state);\n    this.clearForm();\n  };\n\n  render() {\n    const {\n      title, description, imgUrl, imdbUrl, imdbId,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className=\"form\">\n        <div>\n          <label htmlFor=\"title\" className=\"form__item\">\n            Title\n            <input\n              required\n              type=\"text\"\n              name=\"title\"\n              id=\"title\"\n              placeholder=\"Enter movie title\"\n              value={title}\n              onChange={this.handleChange}\n            />\n          </label>\n        </div>\n\n        <div>\n          <label htmlFor=\"description\" className=\"form__item\">\n            Description\n            <textarea\n              required\n              name=\"description\"\n              id=\"description\"\n              value={description}\n              rows={5}\n              onChange={this.handleChange}\n            />\n          </label>\n        </div>\n\n        <div>\n          <label htmlFor=\"imgUrl\" className=\"form__item\">\n            imgUrl\n            <input\n              required\n              type=\"text\"\n              name=\"imgUrl\"\n              id=\"imgUrl\"\n              value={imgUrl}\n              onChange={this.handleChange}\n            />\n          </label>\n        </div>\n\n        <div>\n          <label htmlFor=\"imdbUrl\" className=\"form__item\">\n            imdbUrl\n            <input\n              required\n              type=\"text\"\n              name=\"imdbUrl\"\n              id=\"imdbUrl\"\n              value={imdbUrl}\n              onChange={this.handleChange}\n            />\n          </label>\n        </div>\n\n        <div>\n          <label htmlFor=\"imdbId\" className=\"form__item\">\n            imdbId\n            <input\n              required\n              type=\"text\"\n              name=\"imdbId\"\n              id=\"imdbId\"\n              value={imdbId}\n              onChange={this.handleChange}\n            />\n          </label>\n        </div>\n\n        <button type=\"submit\" className=\"form__btn\">\n          Add a new movie\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}